apiVersion: v1
kind: Namespace
metadata:
  name: edgedelta
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: edgedelta
  namespace: edgedelta
  annotations:
    prometheus.io/scrape: "true"
  labels:
    k8s-app: edgedelta-logging
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    matchLabels:
      k8s-app: edgedelta-logging
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      labels:
        k8s-app: edgedelta-logging
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: edgedelta
      containers:
      - name: edgedelta-agent
        image: docker.io/edgedelta/agent:latest
        ports:
          - name: metrics
            containerPort: 6062
            hostPort: 6062
        env:
          - name: ED_API_KEY
            valueFrom:
              # kubectl create secret generic ed-api-key \
              #   --namespace=edgedelta \
              #   --from-literal=ed-api-key="2c7a5780-..."
              secretKeyRef:
                key: ed-api-key
                name: ed-api-key
          - name:  STORE_PORT
            value: "6062"
          # Uncomment if proxy setup needed
          # More details: https://github.com/golang/net/blob/master/http/httpproxy/proxy.go#L27
          # - name:  HTTP_PROXY
          #   value: my.proxy.com
          # - name:  NO_PROXY
          #   value: skip.proxy.com
        command:
          - /edgedelta/edgedelta
        resources:
          limits:
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
        volumeMounts:
          - name: varlog
            mountPath: /var/log
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
            readOnly: true
        # Required for OpenShift or SELinux enabled K8s clusters
        # securityContext:
        #   runAsUser: 0
        #   privileged: true
        imagePullPolicy: Always
      imagePullSecrets:
        - name: regcred
      terminationGracePeriodSeconds: 10
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: edgedelta
subjects:
- kind: ServiceAccount
  name: edgedelta
  namespace: edgedelta
roleRef:
  kind: ClusterRole
  name: edgedelta
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: edgedelta
  labels:
    k8s-app: edgedelta-logging
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  verbs:
  - get
  - watch
  - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: edgedelta
  namespace: edgedelta
  labels:
    k8s-app: edgedelta-logging
