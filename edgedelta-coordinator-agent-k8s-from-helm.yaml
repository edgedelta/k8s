---
# Source: edgedelta-coordinator/templates/service_account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: edgedelta-coordinator
  namespace: edgedelta
  labels:
    app.kubernetes.io/name: edgedelta-coordinator
    app.kubernetes.io/instance: edgedelta-coordinator
---
# Source: edgedelta-coordinator/templates/service_account.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: edgedelta-coordinator
  namespace: edgedelta
  labels:
    app.kubernetes.io/name: edgedelta-coordinator
    app.kubernetes.io/instance: edgedelta-coordinator
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  - pods/log
  - events
  - nodes
  - nodes/metrics
  - services
  verbs:
  - get
  - watch
  - list
- apiGroups: [""] # "" indicates the core API group
  resources:
  - events
  verbs:
  - create
- apiGroups: ["coordination.k8s.io"]
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups: ["metrics.k8s.io"]
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups: ["apps"] # "" indicates the apps API group
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - watch
  - list
- apiGroups: ["batch"] # "" indicates the batch API group
  resources:
  - jobs
  - cronjobs
  verbs:
  - watch
  - list
# This is needed since OpenShift uses different KSM package which requires authentication
---
# Source: edgedelta-coordinator/templates/service_account.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: edgedelta-coordinator
  namespace: edgedelta
  labels:
    app.kubernetes.io/name: edgedelta-coordinator
    app.kubernetes.io/instance: edgedelta-coordinator
subjects:
- kind: ServiceAccount
  name: edgedelta-coordinator
  namespace: edgedelta
roleRef:
  kind: ClusterRole
  name: edgedelta-coordinator
  apiGroup: rbac.authorization.k8s.io
---
# Source: edgedelta-coordinator/templates/compactor.yaml
kind: Service
apiVersion: v1
metadata:
  name: ed-compactor-svc
  namespace: edgedelta
  labels:
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    app.kubernetes.io/name: edgedelta-coordinator
    app.kubernetes.io/instance: edgedelta-coordinator
    edgedelta/agent-type: compactor
  ports:
    - port: 9199
      name: compactor-port
---
# Source: edgedelta-coordinator/templates/rollup.yaml
kind: Service
apiVersion: v1
metadata:
  name: ed-rollup-svc
  namespace: edgedelta
  labels:
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    app.kubernetes.io/name: edgedelta-coordinator
    app.kubernetes.io/instance: edgedelta-coordinator
    edgedelta/agent-type: rollup
  ports:
    - port: 9200
      name: rollup-port
---
# Source: edgedelta-coordinator/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: ed-coordinator-svc
  namespace: edgedelta
  labels:
    version: v1
    kubernetes.io/cluster-service: "true"
spec:
  selector:
    app.kubernetes.io/name: edgedelta-coordinator
    app.kubernetes.io/instance: edgedelta-coordinator
    edgedelta/agent-type: processor
  ports:
    - port: 5555
      name: coordinator-port
---
# Source: edgedelta-coordinator/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: edgedelta-coordinator
  namespace: edgedelta
  labels:
    app.kubernetes.io/name: edgedelta-coordinator
    app.kubernetes.io/instance: edgedelta-coordinator
    edgedelta/agent-type: processor
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: edgedelta-coordinator
      app.kubernetes.io/instance: edgedelta-coordinator
      edgedelta/agent-type: processor
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: edgedelta-coordinator
        app.kubernetes.io/instance: edgedelta-coordinator
      
        edgedelta/agent-type: processor
    spec:
      serviceAccountName: edgedelta-coordinator
      containers:
        # agent container
        - name: edgedelta-coordinator-agent
          image: gcr.io/edgedelta/agent:v1.35.0
          ports:
            - name: coordinator
              containerPort: 5555
          env:
            - name: ED_FLEET_TYPE
              value: coordinator
            - name: ED_COORDINATOR_SERVER_ENABLED
              value: "1"
            - name: ED_COORDINATOR_SERVER_PORT
              value: "5555"
            - name: ED_COORDINATOR_USE_BACKEND
              value: "1"
            
            - name:  ED_API_KEY
              valueFrom:
                secretKeyRef:
                  name: ed-api-key
                  key: ed-api-key
            - name: ED_ENABLE_PARENT_K8S_CONTROLLER_DISCOVERY
              value: "1"
            - name: ED_K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: ED_K8S_NAMESPACE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: ED_K8S_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: ED_COMPACT_SERVICE_ENDPOINT
              value: ed-compactor-svc.edgedelta.svc.cluster.local:9199
            - name: ED_METRIC_ROLLUP_ENABLED
              value: "1"
            - name: ED_METRIC_ROLLUP_DESTINATION_OVERRIDE
              value: ed-rollup-svc.edgedelta.svc.cluster.local:9200
          resources:
            limits:
              cpu: 2000m
              memory: 2Gi
            requests:
              cpu: 200m
              memory: 256Mi
          imagePullPolicy: IfNotPresent
          volumeMounts:
      terminationGracePeriodSeconds: 10
      volumes:
---
# Source: edgedelta-coordinator/templates/rollup.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: edgedelta-coordinator-rollup
  namespace: edgedelta
  labels:
    app.kubernetes.io/name: edgedelta-coordinator
    app.kubernetes.io/instance: edgedelta-coordinator
    edgedelta/agent-type: rollup
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: edgedelta-coordinator
      app.kubernetes.io/instance: edgedelta-coordinator
      edgedelta/agent-type: rollup
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: edgedelta-coordinator
        app.kubernetes.io/instance: edgedelta-coordinator
      
        edgedelta/agent-type: rollup
    spec:
      serviceAccountName: edgedelta-coordinator
      containers:
      - name: edgedelta-coordinator-rollup
        image: gcr.io/edgedelta/agent:v1.35.0
        ports:
          - name: rollup
            containerPort: 9200
        env:
          - name: ED_FLEET_TYPE
            value: coordinator
          - name: ED_METRIC_ROLLUP_SERVER_PORT
            value: "9200"
          - name: ED_K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: ED_K8S_NAMESPACE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: ED_K8S_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: ED_COORDINATOR_CLIENT_ENABLED
            value: "1"
          - name: ED_COORDINATOR_CLIENT_ENDPOINT
            value: "ed-coordinator-svc.edgedelta.svc.cluster.local:5555"
          
          - name: ED_API_KEY
            valueFrom:
              secretKeyRef:
                name: ed-api-key
                key: ed-api-key
          - name: ED_TRACE_FILES
            value: ""
          - name: ED_COMPACT_SERVICE_ENDPOINT
            value: ed-compactor-svc.edgedelta.svc.cluster.local:9199
        resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 256Mi
        imagePullPolicy: IfNotPresent
      terminationGracePeriodSeconds: 60
---
# Source: edgedelta-coordinator/templates/compactor.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: edgedelta-coordinator-compactor
  namespace: edgedelta
  labels:
    app.kubernetes.io/name: edgedelta-coordinator
    app.kubernetes.io/instance: edgedelta-coordinator
    edgedelta/agent-type: compactor
spec:
  replicas: 1
  podManagementPolicy: OrderedReady
  selector:
    matchLabels:
      app.kubernetes.io/name: edgedelta-coordinator
      app.kubernetes.io/instance: edgedelta-coordinator
      edgedelta/agent-type: compactor
  serviceName: ed-compactor-svc
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: edgedelta-coordinator
        app.kubernetes.io/instance: edgedelta-coordinator
      
        edgedelta/agent-type: compactor
        version: v1
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: edgedelta-coordinator
      containers:
      - name: edgedelta-coordinator-compactor
        image: gcr.io/edgedelta/agent:v1.35.0
        ports:
          - name: compactor
            containerPort: 9199
        env:
          - name: ED_FLEET_TYPE
            value: coordinator
          - name: ED_AGENT_MODE
            value: compactor
          - name: ED_COMPACTOR_PORT
            value: "9199"
          - name: ED_K8S_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: ED_K8S_NAMESPACE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: ED_K8S_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: ED_COORDINATOR_CLIENT_ENABLED
            value: "1"
          - name: ED_COORDINATOR_CLIENT_ENDPOINT
            value: "ed-coordinator-svc.edgedelta.svc.cluster.local:5555"
          
          - name: ED_API_KEY
            valueFrom:
              secretKeyRef:
                name: ed-api-key
                key: ed-api-key
          - name: ED_TRACE_FILES
            value: ""
        resources:
            limits:
              cpu: 2000m
              memory: 2Gi
            requests:
              cpu: 200m
              memory: 300Mi
        imagePullPolicy: IfNotPresent
        volumeMounts:
      terminationGracePeriodSeconds: 60
      volumes:
